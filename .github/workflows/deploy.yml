name: nodejs

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  pull_request_review:
    types: [submitted]
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '22.x'
      - run: npm install
      - run: npm run lint

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '22.x'
      - run: npm install
      - run: npm run check

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '22.x'
      - run: npm install
      - run: npm run test

  deploy:
    if: github.event_name == 'push' # event push only runs on main
    runs-on: ubuntu-latest
    needs: test
    permissions:
      id-token: write
      contents: read
    env:
      NAME: fable
      ENTRYPOINT: src/deno.ts
      # APP_ID: ${{ secrets.APP_ID }}
      # BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      # MONGO_URI: ${{ secrets.MONGO_URI }}
      # PACKS_URL: ${{ secrets.PACKS_URL }}
      # PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
      # SENTRY_DNS: ${{ secrets.SENTRY_DNS }}
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/deployctl@v1
        with:
          project: '${{ env.NAME }}'
          entrypoint: '${{ env.ENTRYPOINT }}'
      # - run: |
      #     deployctl deploy --project $NAME --entrypoint $ENTRYPOINT \
      #     --env=APP_ID=$APP_ID \
      #     --env=BOT_TOKEN=$BOT_TOKEN
      #     --env=MONGO_URI=$MONGO_URI
      #     --env=PACKS_URL=$PACKS_URL \
      #     --env=PUBLIC_KEY=$PUBLIC_KEY \
      #     --env=SENTRY_DNS=$SENTRY_DNS \
      #     --env=GITHUB_TOKEN=$GITHUB_TOKEN
